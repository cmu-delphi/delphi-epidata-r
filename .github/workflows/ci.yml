name: ci

on: [push]

jobs:
  build_r:
    runs-on: ubuntu-16.04
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: https://demo.rstudiopm.com/all/__linux__/xenial/latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: 3.6
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-v2-${{ hashFiles('r_package/DESCRIPTION')}}
          restore-keys: ${{ runner.os }}-r-v2-

      # - name: Install system dependencies
      #   env:
      #     RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      #   run: |
      #     Rscript -e "remotes::install_github('r-hub/sysreqs')"
      #     sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
      #     sudo -s eval "$sysreqs"

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          install.packages(c('devtools', 'pkgdown', 'webshot', 'textshaping'))
          devtools::install_deps(dependencies = TRUE)

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        shell: Rscript {0}
        run: devtools::check(args = c("--no-manual", "--as-cran"), error_on = "error", check_dir = "check")

      - name: Test
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        shell: Rscript {0}
        run: devtools::test()

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-results
          path: r_package/check

      - name: Build Package

        shell: Rscript {0}
        run: |
          devtools::document()
          devtools::build()
          file.copy(list.files(pattern=\"delphi_epidata_.*.tar.gz\"), "delphi_epidata.tar.gz")
